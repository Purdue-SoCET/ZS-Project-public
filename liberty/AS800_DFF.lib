library (AS800DFF) {
  technology : cmos;
  delay_model : table_lookup;
  bus_naming_style : "%s-%d";

  /* Units */
  time_unit : "1ms";
  voltage_unit : "1V";
  current_unit : "1uA";
  pulling_resistance_unit : "1kOhm";
  leakage_power_unit : "1nW";
  capacitive_load_unit (1.0,pf);

  /* Slew characteristics */
  slew_upper_threshold_pct_rise : 80;
  slew_lower_threshold_pct_rise : 20;
  slew_upper_threshold_pct_fall : 80;
  slew_lower_threshold_pct_fall : 20;
  input_threshold_pct_rise : 50;
  input_threshold_pct_fall : 50;
  output_threshold_pct_rise : 50;
  output_threshold_pct_fall : 50;

  /* Operating Conditions */
  nom_process : 1;
  nom_voltage : 3.3;
  nom_temperature : 25;

  /* Table Templates */
  lu_table_template (setup_template_7x5) {
    variable_1 : related_pin_transition;
    variable_2 : constrained_pin_transition;
    index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
    index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
  }
  lu_table_template (delay_template_7x5) {
    variable_1 : input_net_transition;
    variable_2 : total_output_net_capacitance;
    index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
    index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
  }
  lu_table_template (hold_template_7x5) {
    variable_1 : related_pin_transition;
    variable_2 : constrained_pin_transition;
    index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
    index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
  }

  /* DFF */
  cell (DFF) {
    area : 0;
    pin (CLK) {
      direction : input;
      capacitance : 0.096755;
      rise_capacitance : 0.000000;
      fall_capacitance : 0.000000;
      clock : true;
    }
    pin (D) {
      direction : input;
      capacitance : 0.034897;
      rise_capacitance : 0.000000;
      fall_capacitance : 0.000000;
      timing () {
        related_pin : "CLK";
        timing_type : setup_rising;
        rise_constraint (setup_template_7x5) {
          index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
          index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
          values ( \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000");
        }
        fall_constraint (setup_template_7x5) {
          index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
          index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
          values ( \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000", \
            "1.401000, 1.401000, 1.401000, 1.401000, 1.401000");
        }
      }
      timing () {
        related_pin : "CLK";
        timing_type : hold_rising;
        rise_constraint (hold_template_7x5) {
          index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
          index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
          values ( \
            "1.001000, 1.001000, 1.001000, 1.001000, 1.001000", \
            "1.005000, 1.005000, 1.005000, 1.005000, 1.005000", \
            "1.010000, 1.010000, 1.010000, 1.010000, 1.010000", \
            "1.050000, 1.050000, 1.050000, 1.050000, 1.050000", \
            "1.100000, 1.100000, 1.100000, 1.100000, 1.100000", \
            "1.500000, 1.500000, 1.500000, 1.500000, 1.500000", \
            "2.000000, 2.000000, 2.000000, 2.000000, 2.000000");
        }
        fall_constraint (hold_template_7x5) {
          index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
          index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
          values ( \
            "1.001000, 1.001000, 1.001000, 1.001000, 1.001000", \
            "1.005000, 1.005000, 1.005000, 1.005000, 1.005000", \
            "1.010000, 1.010000, 1.010000, 1.010000, 1.010000", \
            "1.050000, 1.050000, 1.050000, 1.050000, 1.050000", \
            "1.100000, 1.100000, 1.100000, 1.100000, 1.100000", \
            "1.500000, 1.500000, 1.500000, 1.500000, 1.500000", \
            "2.000000, 2.000000, 2.000000, 2.000000, 2.000000");
        }
      }
    }
    pin (Q) {
      direction : output;
      capacitance : 0.000000;
      rise_capacitance : 0.000000;
      fall_capacitance : 0.000000;
      function : "D";
      timing () {
        related_pin : "Q";
        timing_type : rising_edge;
        cell_rise (delay_template_7x5) {
          index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
          index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
          values ( \
            "1.400966, 1.400966, 1.400966, 1.400966, 1.400966", \
            "1.400938, 1.400938, 1.400938, 1.400938, 1.400936", \
            "1.400938, 1.400938, 1.400938, 1.400938, 1.400936", \
            "1.400938, 1.400938, 1.400938, 1.400938, 1.400936", \
            "1.400938, 1.400938, 1.400938, 1.400938, 1.400936", \
            "1.400938, 1.400938, 1.400938, 1.400938, 1.400936", \
            "1.400938, 1.400938, 1.400938, 1.400938, 1.400936");
        }
        rise_transition (delay_template_7x5) {
          index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
          index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
          values ( \
            "0.000064, 0.000064, 0.000064, 0.000064, 0.000064", \
            "0.000050, 0.000050, 0.000050, 0.000050, 0.000050", \
            "0.000050, 0.000050, 0.000050, 0.000050, 0.000050", \
            "0.000050, 0.000050, 0.000050, 0.000050, 0.000050", \
            "0.000050, 0.000050, 0.000050, 0.000050, 0.000050", \
            "0.000050, 0.000050, 0.000050, 0.000050, 0.000050", \
            "0.000050, 0.000050, 0.000050, 0.000050, 0.000050");
        }
        cell_fall (delay_template_7x5) {
          index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
          index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
          values ( \
            "1.400869, 1.400869, 1.400864, 1.400869, 1.400869", \
            "1.400869, 1.400869, 1.400869, 1.400869, 1.400869", \
            "1.400869, 1.400872, 1.400869, 1.400869, 1.400869", \
            "1.400869, 1.400869, 1.400869, 1.400869, 1.400869", \
            "1.400869, 1.400869, 1.400869, 1.400869, 1.400869", \
            "1.400869, 1.400869, 1.400869, 1.400869, 1.400869", \
            "1.400869, 1.400869, 1.400869, 1.400869, 1.400869");
        }
        fall_transition (delay_template_7x5) {
          index_1 ("0.001, 0.005, 0.01, 0.05, 0.1, 0.5, 1");
          index_2 ("0.001, 0.005, 0.01, 0.05, 0.1");
          values ( \
            "0.000058, 0.000058, 0.000053, 0.000058, 0.000058", \
            "0.000058, 0.000058, 0.000058, 0.000058, 0.000058", \
            "0.000058, 0.000064, 0.000058, 0.000058, 0.000058", \
            "0.000058, 0.000058, 0.000058, 0.000058, 0.000058", \
            "0.000058, 0.000058, 0.000058, 0.000058, 0.000058", \
            "0.000058, 0.000058, 0.000058, 0.000058, 0.000058", \
            "0.000058, 0.000058, 0.000058, 0.000058, 0.000058");
        }
      }
    }
  }
}
